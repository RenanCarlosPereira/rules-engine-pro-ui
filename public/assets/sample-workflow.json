{
  "workflowName": "CreditApprovalWorkflow",
  "globalParams": [
    {
      "name": "MinAge",
      "expression": "21"
    },
    {
      "name": "AllowedCountries",
      "expression": "Utils.StringArray(\"USA\", \"Canada\", \"Ireland\")"
    },
    {
      "name": "MinCreditScore",
      "expression": "650"
    }
  ],
  "rules": [
    {
      "ruleName": "MasterEligibilityRule",
      "enabled": true,
      "operator": "And",
      "rules": [
        {
          "ruleName": "AgeValidation",
          "enabled": true,
          "expression": "person.age >= MinAge && person.age <= 65",
          "ruleExpressionType": "LambdaExpression",
          "localParams": [],
          "actions": {},
          "properties": {}
        },
        {
          "ruleName": "CountryValidation",
          "enabled": true,
          "expression": "AllowedCountries.Contains(person.country) && person.country != \"Russia\"",
          "ruleExpressionType": "LambdaExpression",
          "localParams": [],
          "actions": {},
          "properties": {}
        },
        {
          "ruleName": "FinancialOrEmploymentCriteria",
          "enabled": true,
          "operator": "Or",
          "rules": [
            {
              "ruleName": "StrongFinancialBackground",
              "enabled": true,
              "operator": "And",
              "rules": [
                {
                  "ruleName": "SalaryCheck",
                  "enabled": true,
                  "expression": "person.salary >= 60000",
                  "ruleExpressionType": "LambdaExpression",
                  "localParams": [],
                  "actions": {},
                  "properties": {}
                },
                {
                  "ruleName": "DebtRatioCheck",
                  "enabled": true,
                  "expression": "(person.existingDebt / person.salary) < 0.3",
                  "ruleExpressionType": "LambdaExpression",
                  "localParams": [],
                  "actions": {},
                  "properties": {}
                }
              ],
              "localParams": [
                {
                  "name": "DebtRatio",
                  "expression": "person.existingDebt / person.salary"
                }
              ],
              "actions": {},
              "properties": {},
              "ruleExpressionType": "LambdaExpression"
            },
            {
              "ruleName": "LongEmploymentAndCleanHistory",
              "enabled": true,
              "operator": "And",
              "rules": [
                {
                  "ruleName": "EmploymentDuration",
                  "enabled": true,
                  "expression": "person.yearsAtCurrentJob >= 5",
                  "ruleExpressionType": "LambdaExpression",
                  "localParams": [],
                  "actions": {},
                  "properties": {}
                },
                {
                  "ruleName": "NoDefaults",
                  "enabled": true,
                  "expression": "!person.hasDefaultedLoans",
                  "ruleExpressionType": "LambdaExpression",
                  "localParams": [],
                  "actions": {},
                  "properties": {}
                }
              ],
              "localParams": [],
              "actions": {},
              "properties": {},
              "ruleExpressionType": "LambdaExpression"
            }
          ],
          "localParams": [],
          "actions": {},
          "properties": {},
          "ruleExpressionType": "LambdaExpression"
        }
      ],
      "localParams": [
        {
          "name": "EligibilityScore",
          "expression": "(person.salary - person.existingDebt) + (person.yearsAtCurrentJob * 1000) + (person.creditScore / 10)"
        }
      ],
      "actions": {
        "onSuccess": {
          "name": "OutputExpression",
          "context": {
            "expression": "EligibilityScore"
          }
        },
        "onFailure": {
          "name": "EvaluateRule",
          "context": {
            "workflowName": "CreditApprovalWorkflow",
            "ruleName": "RiskAssessmentRule"
          }
        }
      },
      "properties": {},
      "ruleExpressionType": "LambdaExpression"
    },
    {
      "ruleName": "RiskAssessmentRule",
      "enabled": true,
      "operator": "And",
      "rules": [
        {
          "ruleName": "DebtOverload",
          "enabled": true,
          "expression": "person.existingDebt > 30000",
          "ruleExpressionType": "LambdaExpression",
          "localParams": [],
          "actions": {},
          "properties": {}
        },
        {
          "ruleName": "LowCreditScore",
          "enabled": true,
          "expression": "person.creditScore < MinCreditScore",
          "ruleExpressionType": "LambdaExpression",
          "localParams": [],
          "actions": {},
          "properties": {}
        }
      ],
      "actions": {
        "onSuccess": {
          "name": "OutputExpression",
          "context": {
            "expression": "\"High risk identified\""
          }
        },
        "onFailure": {
          "name": "EvaluateRule",
          "context": {
            "workflowName": "CreditApprovalWorkflow",
            "ruleName": "EmploymentValidationRule"
          }
        }
      },
      "localParams": [],
      "properties": {},
      "ruleExpressionType": "LambdaExpression"
    },
    {
      "ruleName": "EmploymentValidationRule",
      "enabled": true,
      "operator": "And",
      "rules": [
        {
          "ruleName": "MinEmploymentYears",
          "enabled": true,
          "expression": "person.yearsAtCurrentJob >= 2",
          "ruleExpressionType": "LambdaExpression",
          "localParams": [],
          "actions": {},
          "properties": {}
        },
        {
          "ruleName": "EmployerVerificationStatus",
          "enabled": true,
          "expression": "person.employerVerified == true",
          "ruleExpressionType": "LambdaExpression",
          "localParams": [],
          "actions": {},
          "properties": {}
        }
      ],
      "actions": {
        "onSuccess": {
          "name": "OutputExpression",
          "context": {
            "expression": "\"Employment verified\""
          }
        },
        "onFailure": {
          "name": "OutputExpression",
          "context": {
            "expression": "\"1+1\""
          }
        }
      },
      "localParams": [],
      "properties": {},
      "ruleExpressionType": "LambdaExpression"
    }
  ]
}
